name: Build YGOPro (Win32 Release)

on:
  push:
    branches: [ yml ]
  pull_request:
    branches: [ yml ]

jobs:
  build:
    runs-on: windows-2022
    steps:
    - name: Download and Install DirectX SDK (June 2010)
      run: |
        curl -L -o "$env:TEMP\directx_jun2010.exe" "https://download.microsoft.com/download/8/4/A/84A35BF1-DAFE-4AE8-82AF-AD2AE20B6B14/directx_Jun2010_redist.exe"
        Start-Process -FilePath "$env:TEMP\directx_jun2010.exe" -ArgumentList "/Q" -Wait
        echo "DXSDK_DIR=C:\Program Files (x86)\Microsoft DirectX SDK (June 2010)" >> $env:GITHUB_ENV
        echo "INCLUDE=$env:DXSDK_DIR\Include;$env:INCLUDE" >> $env:GITHUB_ENV
        echo "LIB=$env:DXSDK_DIR\Lib\x86;$env:LIB" >> $env:GITHUB_ENV
    
    - name: Checkout code with submodules
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Initialize submodules
      run: |
        git submodule update --init --recursive
        git submodule update --remote

    # Download and extract dependencies
    - name: clone dependency
      run: |
        git clone --depth 1 https://github.com/vgdpro/vgdpro-dependency.git dependency
        xcopy /E /Y /Q dependency\* .

    # Prepare build environment
    - name: Copy premake files
      run: xcopy /E /Y /Q premake\* .

    # Generate solution
    - name: Generate Visual Studio solution
      run: |
        .\premake5.exe vs2022

    # Build solution
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Build Solution (Win32 Release)
      run: |
        MSBuild.exe build/YGOPro.sln /m /p:Configuration=Release /p:Platform=Win32
        
    # Upload artifacts
    - name: Verify build output
      run: dir bin/Release /s

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: YGOPro-Win32-Release
        path: bin/Release/YGOPro.exe
        if-no-files-found: error